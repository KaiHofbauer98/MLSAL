/*
 * Copyright © Kai Hofbauer – All Rights Reserved
 * 
 * EN
 * Unauthorized copying of this software, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Kai Hofbauer kaihofbauer@icloud.com, October 2023
 * All components of this software that have not been newly developed (compilers, package sources and archives), as well as the development environment, have been expressly released by the manufacturers for commercial use.
 * The newly designed source code and its compilations, however, are newly created intellectual property of Kai Hofbauer for commercial use.
 * 
 * DE
 * Unerlaubtes Kopieren dieser Software, egal mit welchem Medium, ist strengstens verboten.
 * Proprietär und vertraulich
 * Geschrieben von Kai Hofbauer kaihofbauer@icloud.com, Oktober 2023
 * Alle nicht neu entwickelten Bestandteile (Compiler, Paketquellen und Archive) dieser Software, sowie die Entwicklungsumgebung sind von den Herstellern für die kommerzielle Nutzung ausdrücklich freigegeben.
 * Der neu entworfene Quellcode und seine Kompilierungen sind hingegen für den kommerziellen Gebrauch neu erschaffenes, geistiges Eigentum von Kai Hofbauer.
 * 
 * 
 * Verwendete Software:
 * •	Entwicklungsumgebung:		Apache NetBeans IDE 19	https://netbeans.apache.org/
 * •	Programmiersprache:		JAVA
 * •	JDK:				21			https://adoptium.net
 * 
 * 
 * © Kai Hofbauer – 2023
 */
package uk.wu.kh.mlsal.GUIs;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import uk.wu.kh.mlsal.Ball.Ball;
import uk.wu.kh.mlsal.Dice.Dice;
import uk.wu.kh.mlsal.Fields.Field;
import uk.wu.kh.mlsal.History.Movement;
import uk.wu.kh.mlsal.Maps.Map;
import uk.wu.kh.mlsal.Maps.MapGenerator;
import uk.wu.kh.mlsal.GUIs.Visualizer.GraphicFiledView;

/**
 * This is the main GUI JFrame from wich contains the most of the game logic.
 *
 * @author Kai Hofbauer
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * This is the standard value for the new broadgame dice.
     */
    private static final int INITIAL_DICE_SIDES = 6;

    /**
     * This is our braodgame dice.
     */
    private static final Dice dice = getDice(INITIAL_DICE_SIDES);

    /**
     * This is our braodgame Map.
     */
    private static final Map map = new Map(100);

    /**
     * This is our wooden braoadgame ball.
     */
    private static final Ball ball = new Ball(map);

    /**
     * This bool controls the execution of the auto run game method.
     */
    private static boolean auto = true;

    /**
     * This ArrayList holds all movements made in the game.
     */
    private static final ArrayList<Movement> movement_histroy = new ArrayList<>();

    private static final HistroyView hsView = new HistroyView(movement_histroy);
    private static final MapView mapView = new MapView(map);

    public static final Dice diceArr[] = new Dice[4];
    private final AutoLinkListDialog AutoLinkListDialog = new AutoLinkListDialog(this, true);

    /**
     * This Thread runs the auto gameplay mode.
     */
    private Thread autoThread;

    /**
     * This is a static implementation of building a Exception throwing object
     * in static code. My Exception handling creates a Dice with a hardcoded
     * dice side value if the creation should fail.
     *
     * @param sides
     * @return
     */
    private static Dice getDice(int sides) {
        Dice staticDice = null;
        try {
            staticDice = new Dice(sides);
        } catch (Exception ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("WARNING! Using standard dice sides of two now!");
            if (staticDice == null) {
                try {
                    staticDice = new Dice(2);
                } catch (Exception ex1) {
                    //No Exception can occur here anymore!
                }
            }
        }
        return staticDice;
    }

    /**
     * Creates new form NewJFrame
     */
    public MainGUI() {
        initComponents();

        MapGenerator.loadProperties();
        MapGenerator.generateSpecialFieldsFromProperties(map);
        GraphicFiledView.initialize(map);
        jLabel_Goal.setText(String.valueOf(map.getNumber_of_fields()));
        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        jMenuItem_History_Viewer.setEnabled(true);
        jButton_Roll_the_Dice.setEnabled(true);
        jButton_Roll_the_Dice_and_move_Ball.setEnabled(true);
        jComboBox_Dice_Eyes.setEnabled(true);
//</editor-fold>
    }
//

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox_Dice_Eyes = new javax.swing.JComboBox();
        jButton_Roll_the_Dice = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel_Dice_Upper_Eye = new javax.swing.JLabel();
        jButton_Roll_the_Dice_and_move_Ball = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_Ball_Position = new javax.swing.JLabel();
        jLabel_Goal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton_move_Ball = new javax.swing.JButton();
        jLabel_Ball_From = new javax.swing.JLabel();
        jLabel_Ball_to = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jComboBox_Ms = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton_auto = new javax.swing.JButton();
        jButton_autoLL = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jRadioButton_Dark = new javax.swing.JRadioButton();
        jRadioButton_Light = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel_SIZE = new javax.swing.JLabel();
        jLabel_TotalMEM = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_MapViewer = new javax.swing.JMenuItem();
        jMenuItem_History_Viewer = new javax.swing.JMenuItem();
        jMenuItem_GraphicView = new javax.swing.JMenuItem();
        jMenuItem_new_game = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multi Level Snakes and Ladders");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dice"));

        jLabel1.setText("Dice eyes:");

        jComboBox_Dice_Eyes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "12", "14", "16", "18", "20", "24", "30", "34", "48", "50", "60", "100", "120" }));
        jComboBox_Dice_Eyes.setSelectedIndex(4);
        jComboBox_Dice_Eyes.setEnabled(false);
        jComboBox_Dice_Eyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Dice_EyesActionPerformed(evt);
            }
        });

        jButton_Roll_the_Dice.setText("Roll the Dice!");
        jButton_Roll_the_Dice.setEnabled(false);
        jButton_Roll_the_Dice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Roll_the_DiceActionPerformed(evt);
            }
        });

        jLabel2.setText("Upper Eye:");

        jLabel_Dice_Upper_Eye.setText(" ");

        jButton_Roll_the_Dice_and_move_Ball.setText("Roll & Move");
        jButton_Roll_the_Dice_and_move_Ball.setEnabled(false);
        jButton_Roll_the_Dice_and_move_Ball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Roll_the_Dice_and_move_BallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_Roll_the_Dice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_Dice_Upper_Eye, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_Dice_Eyes, 0, 1, Short.MAX_VALUE)))
                    .addComponent(jButton_Roll_the_Dice_and_move_Ball, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox_Dice_Eyes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel_Dice_Upper_Eye))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Roll_the_Dice_and_move_Ball)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Roll_the_Dice)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Game Info"));
        jPanel2.setToolTipText("");

        jLabel3.setText("Ball position:");

        jLabel4.setText("Goal:");

        jLabel_Ball_Position.setText(" ");

        jLabel_Goal.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Goal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Ball_Position, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel_Ball_Position))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel_Goal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ball"));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Need to move Ball From:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("To:");

        jButton_move_Ball.setText("Move Ball");
        jButton_move_Ball.setEnabled(false);
        jButton_move_Ball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_move_BallActionPerformed(evt);
            }
        });

        jLabel_Ball_From.setText(" ");

        jLabel_Ball_to.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_Ball_to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_Ball_From, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton_move_Ball)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel_Ball_From))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel_Ball_to))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_move_Ball)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Auto Speed"));

        jComboBox_Ms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "10", "25", "50", "80", "100", "200", "300", "400", "500" }));
        jComboBox_Ms.setSelectedIndex(5);

        jLabel6.setText("Milliseconds");

        jButton_auto.setText("Auto");
        jButton_auto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_autoActionPerformed(evt);
            }
        });

        jButton_autoLL.setText("Auto LinkList");
        jButton_autoLL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_autoLLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton_auto, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_autoLL)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox_Ms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_Ms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_auto)
                    .addComponent(jButton_autoLL))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Color Sheme"));

        buttonGroup.add(jRadioButton_Dark);
        jRadioButton_Dark.setText("Dark");
        jRadioButton_Dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_DarkActionPerformed(evt);
            }
        });

        buttonGroup.add(jRadioButton_Light);
        jRadioButton_Light.setSelected(true);
        jRadioButton_Light.setText("Light");
        jRadioButton_Light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_LightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_Dark, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton_Light, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton_Dark)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_Light)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Program Memory"));

        jLabel_SIZE.setText("UsedMEM:");

        jLabel_TotalMEM.setText("TotalMEM: ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_TotalMEM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_TotalMEM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Menu");

        jMenuItem_MapViewer.setText("Map Viewer");
        jMenuItem_MapViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_MapViewerActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_MapViewer);

        jMenuItem_History_Viewer.setText("Histroy Viewer");
        jMenuItem_History_Viewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_History_ViewerActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_History_Viewer);

        jMenuItem_GraphicView.setText("Graphical Viewer");
        jMenuItem_GraphicView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GraphicViewActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_GraphicView);

        jMenuItem_new_game.setText("New Game");
        jMenuItem_new_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_new_gameActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_new_game);

        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * When rolling the dice a new movement object is created and added to the
     * movement history.
     *
     * @param evt
     */
    private void jButton_Roll_the_DiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Roll_the_DiceActionPerformed

        dice.roll_the_dice();

        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        if (!auto) {
            jButton_autoLL.setEnabled(false);
            jButton_move_Ball.setEnabled(true);
            jButton_Roll_the_Dice_and_move_Ball.setEnabled(false);
            jComboBox_Dice_Eyes.setEnabled(false);
        }

//</editor-fold>
        jLabel_Dice_Upper_Eye.setText(String.valueOf(dice.getUpperEye()));

        Movement mvnt = new Movement(dice, ball, map);

        movement_histroy.add(mvnt);

        if (mvnt.getStart() == null) {
            jLabel_Ball_From.setText("");
        } else {
            jLabel_Ball_From.setText(String.valueOf(((Field) movement_histroy.getLast().getStart()).getFiledNumber()));
        }

        //System.out.println(movement_histroy.size());
        jLabel_Ball_to.setText(String.valueOf(((Field) mvnt.getEnd()).getFiledNumber()));
        hsView.updateJTable();

    }//GEN-LAST:event_jButton_Roll_the_DiceActionPerformed

    /**
     * The dices eyes count is changing, maybe you want another dice? :D
     *
     * @param evt
     */
    private void jComboBox_Dice_EyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Dice_EyesActionPerformed
        try {
            dice.setSides(Integer.parseInt(jComboBox_Dice_Eyes.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel_Dice_Upper_Eye.setText("");
        System.out.println("Set the dice eyes to:" + dice.getSides());
    }//GEN-LAST:event_jComboBox_Dice_EyesActionPerformed

    private void jMenuItem_History_ViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_History_ViewerActionPerformed
        hsView.setVisible(true);
    }//GEN-LAST:event_jMenuItem_History_ViewerActionPerformed

    /**
     * This method combines the steps of rolling the dice and moving the ball
     * into one methos wich is callable via single-click.
     *
     * @param evt
     */
    private void jButton_Roll_the_Dice_and_move_BallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Roll_the_Dice_and_move_BallActionPerformed

        jButton_Roll_the_DiceActionPerformed(evt);

        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        if (!auto) {
            jButton_autoLL.setEnabled(false);
            jButton_Roll_the_Dice_and_move_Ball.setEnabled(true);
            jButton_move_Ball.setEnabled(false);
            jComboBox_Dice_Eyes.setEnabled(true);
        }

//</editor-fold>
        move_the_Ball();
    }//GEN-LAST:event_jButton_Roll_the_Dice_and_move_BallActionPerformed

    private void jMenuItem_MapViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_MapViewerActionPerformed
        mapView.setVisible(true);
    }//GEN-LAST:event_jMenuItem_MapViewerActionPerformed

    /**
     * Symbolizes the moving of the ball with your hand over the broadgame.
     *
     * @param evt
     */
    private void jButton_move_BallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_move_BallActionPerformed
        move_the_Ball();
        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        if (!auto) {
            jButton_move_Ball.setEnabled(false);
            jComboBox_Dice_Eyes.setEnabled(true);
            jButton_Roll_the_Dice_and_move_Ball.setEnabled(true);
        }

        //</editor-fold>
    }//GEN-LAST:event_jButton_move_BallActionPerformed

    /**
     * You relax while the program does all the work! Feel free to change the
     * iteration speed of the game while watching your ball move over the
     * braodgame map.
     *
     * <p>
     * We have to run this in a thread due to the GUI response problem. We dont
     * want to be interrupted on the GUI while the information changes smoothly
     * in the background.
     * </p>
     *
     * @param evt
     */
    private void jButton_autoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_autoActionPerformed

        if (jButton_auto.getText().equals("Auto")) {
            jButton_auto.setText("Stop");
            jButton_autoLL.setEnabled(false);
            autoThread = new Thread(() -> {
                auto = true;
                autoAccessSettings(false);
                while (auto) {
                    try {
                        Thread.sleep(Integer.parseInt(jComboBox_Ms.getSelectedItem().toString()));
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    jButton_Roll_the_Dice_and_move_BallActionPerformed(evt);

                }
                jButton_auto.setText("Auto");
                autoAccessSettings(true);
                jButton_auto.setEnabled(true);
            });
            autoThread.start();
        } else {
            jButton_auto.setEnabled(false);
            auto = false;
        }
    }//GEN-LAST:event_jButton_autoActionPerformed

    /**
     * Shortens code (two method calls)
     *
     * @param bool
     */
    private void autoAccessSettings(boolean bool) {
        jComboBox_Dice_Eyes.setEnabled(bool);
        jButton_Roll_the_Dice.setEnabled(bool);
        jButton_Roll_the_Dice_and_move_Ball.setEnabled(bool);
    }

    private void jMenuItem_new_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_new_gameActionPerformed
        newGame();
    }//GEN-LAST:event_jMenuItem_new_gameActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    //TODO 
    //Comment and finalize this section!
    /**
     * TODO!
     *
     * @param evt
     */
    private void jButton_autoLLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_autoLLActionPerformed
        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        jButton_auto.setEnabled(false);
        jButton_autoLL.setEnabled(false);
        //</editor-fold>
//        Dice diceArr[] = new Dice[4];
        //Dice array will be filled in JDialog.
        AutoLinkListDialog.reset();
        AutoLinkListDialog.setVisible(true);

        if (AutoLinkListDialog.start) {
            auto = true;
            autoAccessSettings(false);
            autoThread = new Thread(() -> {
                while (auto) {
                    try {
                        Thread.sleep(Integer.parseInt(jComboBox_Ms.getSelectedItem().toString()));
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int counter = 0;
                    //jLabel_Dice_Upper_Eye.setText(String.valueOf(dice.getUpperEye()));

                    

                    movement_histroy.add(new Movement(diceArr[counter], ball, map));
                    
                    counter++;
                    
                    if (movement_histroy.getLast().getStart() == null) {
                        jLabel_Ball_From.setText("");
                    } else {
                        jLabel_Ball_From.setText(String.valueOf(((Field) movement_histroy.getLast().getStart()).getFiledNumber()));
                    }

                    jLabel_Ball_to.setText(String.valueOf(((Field) movement_histroy.getLast().getEnd()).getFiledNumber()));
                    hsView.updateJTable();

                    move_the_Ball();
                    if (counter == 4) {
                        counter = 0;
                    }

                    jLabel_TotalMEM.setText("TotalMEM: " + String.valueOf(Runtime.getRuntime().totalMemory() / 1000000) + "M");
                    jLabel_SIZE.setText("UsedMEM: " + String.valueOf((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1000000) + "M");

                    if (movement_histroy.size() > 100000) {
                        JOptionPane.showMessageDialog(this, "This would loop forever!", "Infinite Loop Error", JOptionPane.ERROR_MESSAGE);
                        auto = false;
                        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
                        jComboBox_Ms.setEnabled(false);
                        jComboBox_Dice_Eyes.setEnabled(false);
                        jButton_Roll_the_Dice.setEnabled(false);
                        jButton_Roll_the_Dice_and_move_Ball.setEnabled(false);
                        //</editor-fold>

                        break;
                    }
                }
                autoAccessSettings(true);
            });
            autoThread.start();
        } else {
            //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
            jButton_auto.setEnabled(true);
            jButton_autoLL.setEnabled(true);
            //</editor-fold>
        }


    }//GEN-LAST:event_jButton_autoLLActionPerformed

    private void jMenuItem_GraphicViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GraphicViewActionPerformed
        GraphicFiledView.getGraphicFiledViewFrame().setVisible(true);
    }//GEN-LAST:event_jMenuItem_GraphicViewActionPerformed

    private void jRadioButton_DarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_DarkActionPerformed
        FlatDarkLaf.setup();
        FlatLaf.updateUI();
    }//GEN-LAST:event_jRadioButton_DarkActionPerformed

    private void jRadioButton_LightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_LightActionPerformed
        FlatIntelliJLaf.setup();
        FlatLaf.updateUI();
    }//GEN-LAST:event_jRadioButton_LightActionPerformed

    /**
     * This is the backend for the ball movement action on the GUI. The balls
     * position will be changed. If the game reached its maximum field you won
     * the game and a dialog will pop up wich will ask you if you want to play
     * again or not.
     *
     * <p>
     * The newly created thread waits for the thread within the autoplay
     * gamemode runs with the Thread.join() method. Only after Thread stop we
     * want to continue in the code.
     * </p>
     */
    private void move_the_Ball() {
        jLabel_Ball_From.setText("");
        jLabel_Ball_to.setText("");
        movement_histroy.getLast().setBall_moved(true);
        try {
            ball.setPosition(((Field) movement_histroy.getLast().getEnd()).getFiledNumber());
        } catch (Exception ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ball.getPosition() == map.getNumber_of_fields()) {
            auto = false;
            //This Thread is waiting for the while loop in the auto button void to end because
            //There is a concurrency in enabled(true/false).
            new Thread(() -> {
                //<editor-fold defaultstate="collapsed" desc="Wait for autoThread to finish">
                if (autoThread != null) {
                    try {
                        //Join does the same to the Thread its called in as Thread.sleep();
                        //You can specify milliseconds also
                        autoThread.join();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
//</editor-fold>
                //Here the logic contnues
                JOptionPane.showMessageDialog(this, "YOU WON!", "CONGRATS!", JOptionPane.INFORMATION_MESSAGE);
                int e = JOptionPane.showConfirmDialog(this, "New Game?", "", JOptionPane.YES_NO_OPTION);
                switch (e) {
                    case JOptionPane.YES_OPTION -> {
                        newGame();
                        break;
                    }

                    default -> {
                        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
                        jComboBox_Dice_Eyes.setEnabled(false);
                        jButton_Roll_the_Dice.setEnabled(false);
                        jButton_Roll_the_Dice_and_move_Ball.setEnabled(false);
                        jButton_move_Ball.setEnabled(false);
                        jButton_auto.setEnabled(false);
//</editor-fold>
                    }
                }
            }).start();

        }
        jLabel_Ball_Position.setText(String.valueOf(ball.getPosition()));
        hsView.updateJTable();
        GraphicFiledView.actualize(ball);
    }

    /**
     * This void clears the movement history and the balls position in order to
     * start a new Game.
     */
    private void newGame() {
        try {
            ball.setPosition(0);
        } catch (Exception ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel_Ball_Position.setText(String.valueOf(ball.getPosition()));
        movement_histroy.clear();
        hsView.updateJTable();
        //<editor-fold defaultstate="collapsed" desc="Elements enabled true/false settings">
        jButton_auto.setEnabled(true);
        jButton_autoLL.setEnabled(true);
        jButton_Roll_the_Dice.setEnabled(true);
        jButton_Roll_the_Dice_and_move_Ball.setEnabled(true);
        jComboBox_Dice_Eyes.setEnabled(true);
        jButton_move_Ball.setEnabled(false);
        //</editor-fold>
    }

    //<editor-fold defaultstate="collapsed" desc="Variables declaration - do not modify">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jButton_Roll_the_Dice;
    private javax.swing.JButton jButton_Roll_the_Dice_and_move_Ball;
    private javax.swing.JButton jButton_auto;
    private javax.swing.JButton jButton_autoLL;
    private javax.swing.JButton jButton_move_Ball;
    private javax.swing.JComboBox jComboBox_Dice_Eyes;
    private javax.swing.JComboBox<String> jComboBox_Ms;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_Ball_From;
    private javax.swing.JLabel jLabel_Ball_Position;
    private javax.swing.JLabel jLabel_Ball_to;
    private javax.swing.JLabel jLabel_Dice_Upper_Eye;
    private javax.swing.JLabel jLabel_Goal;
    private javax.swing.JLabel jLabel_SIZE;
    private javax.swing.JLabel jLabel_TotalMEM;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_GraphicView;
    private javax.swing.JMenuItem jMenuItem_History_Viewer;
    private javax.swing.JMenuItem jMenuItem_MapViewer;
    private javax.swing.JMenuItem jMenuItem_new_game;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton_Dark;
    private javax.swing.JRadioButton jRadioButton_Light;
    // End of variables declaration//GEN-END:variables
}
//</editor-fold>
